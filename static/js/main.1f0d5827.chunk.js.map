{"version":3,"sources":["components/ThumbnailPicker.js","components/PreviewPanel.js","components/InputPanel.js","components/MemeGenerator.js","containers/App.js","index.js"],"names":["ThumbnailPicker","_ref","action","images","react_default","a","createElement","id","map","image","index","src","alt","onClick","data-key","key","PreviewPanel","topText","bottomText","MemeInputPanel","setTopText","setBottomText","saveImage","type","onChange","placeholder","MemeGenerator","props","components_ThumbnailPicker","selectImage","components_PreviewPanel","InputPanel","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","getAttribute","value","domtoimage","toJpeg","document","getElementById","quality","then","dataUrl","link","download","href","click","state","components_MemeGenerator","Component","ReactDOM","render","containers_App"],"mappings":"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","file":"static/js/main.1f0d5827.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ThumbnailPicker = ({ action, images }) => (\r\n  <div id=\"thumbnails-container\">\r\n    {images.map((image, index) => <img src={image} alt=\"\" onClick={action} data-key={image} key={index}></img>)}\r\n  </div>\r\n)\r\n\r\nexport default ThumbnailPicker","import React from 'react'\r\n\r\nconst PreviewPanel = ({ image, topText, bottomText }) => (\r\n  <div id='preview-container'>\r\n    <img id='preview-image' src={image} alt='Meme' />\r\n    <div id='topText'>{topText}</div>\r\n    <div id='bottomText'>{bottomText}</div>\r\n  </div>\r\n)\r\n\r\nexport default PreviewPanel","import React from 'react'\r\n\r\nconst MemeInputPanel = ({setTopText, setBottomText, saveImage}) => (\r\n        <div id=\"input-container\">\r\n            <input id='topInput' type='text' onChange={setTopText} placeholder='Type top text here'></input>\r\n            <input id='bottomInput' type='text' onChange={setBottomText} placeholder='Type bottom text here'></input>\r\n            <button onClick={saveImage}>Save Your Meme</button>\r\n        </div>\r\n)\r\n  \r\nexport default MemeInputPanel","import React from 'react'\r\nimport ThumbnailPicker from './ThumbnailPicker'\r\nimport PreviewPanel from './PreviewPanel'\r\nimport InputPanel from './InputPanel'\r\n\r\nconst MemeGenerator = (props) => (\r\n    <div id=\"main-container\">\r\n        <div id=\"thumbnails\">\r\n            <ThumbnailPicker\r\n                action={props.selectImage}\r\n                images={props.images}\r\n            />\r\n        </div>\r\n        <div id=\"preview\">\r\n            <PreviewPanel\r\n                image={props.image}\r\n                topText={props.topText}\r\n                bottomText={props.bottomText}\r\n            />\r\n        </div>\r\n        <div id=\"input\">\r\n            <InputPanel\r\n                setTopText={props.setTopText}\r\n                setBottomText={props.setBottomText}\r\n                saveImage={props.saveImage}\r\n            />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default MemeGenerator","import React, { Component } from 'react'\r\nimport domtoimage from 'dom-to-image-more'\r\nimport '../index.css'\r\nimport MemeGenerator from '../components/MemeGenerator'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const images = ['./images/dog1.jpg', './images/dog2.jpg', './images/dog3.jpg', './images/dog4.jpg', './images/dog5.jpg', './images/dog6.jpg', './images/dog7.jpg', './images/dog8.jpg']\r\n        const topText = ''\r\n        const bottomText = ''\r\n\r\n        this.state = { image: './images/default.jpg', images, topText, bottomText }\r\n    }\r\n\r\n    selectImage = event => {\r\n        this.setState({ image: event.target.getAttribute('data-key') })\r\n    }\r\n\r\n    setTopText = event => {\r\n        this.setState({ topText: event.target.value })\r\n    }\r\n\r\n    setBottomText = event => {\r\n        this.setState({ bottomText: event.target.value })\r\n    }\r\n\r\n    saveImage = () => {\r\n        domtoimage.toJpeg(document.getElementById('preview-container'), { quality: 0.95})\r\n        .then(function (dataUrl) {\r\n            var link = document.createElement('a')\r\n            link.download = 'meme.jpg'\r\n            link.href = dataUrl\r\n            link.click()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <h1>Dog Meme Generator</h1>\r\n                </header>\r\n\r\n                <MemeGenerator\r\n                    image={this.state.image}\r\n                    images={this.state.images}\r\n                    topText={this.state.topText}\r\n                    bottomText={this.state.bottomText}\r\n                    selectImage={this.selectImage}\r\n                    setTopText={this.setTopText}\r\n                    setBottomText={this.setBottomText}\r\n                    saveImage={this.saveImage}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}